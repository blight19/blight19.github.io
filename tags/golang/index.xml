<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on 闫的Blog</title>
    <link>/tags/golang/</link>
    <description>Recent content in golang on 闫的Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>进程间通信方式</title>
      <link>/post/process2process_communication/</link>
      <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
      <guid>/post/process2process_communication/</guid>
      <description>## 使用操作系统中的管道来进行通信 创建管道 syscall.Mkfifo(path, 0666) 读取和写入 func read() { fmt.Println(&amp;#34;open a named pipe file for read.&amp;#34;) file, _ := os.OpenFile(pipeFile, os.O_RDWR, os.ModeNamedPipe) reader := bufio.NewReader(file) for { line, err := reader.ReadBytes(&amp;#39;\n&amp;#39;) fmt.Println(&amp;#34;read...&amp;#34;) if err == nil { fmt.Print(&amp;#34;load string: &amp;#34; + string(line)) } } } func write() { f,</description>
    </item>
  </channel>
</rss>
